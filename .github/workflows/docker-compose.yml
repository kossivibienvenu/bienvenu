#version: '3.8'

services:
  app:
    image: python:3.7
    container_name: python_app
    command: bash -c "pip install -r requirements.txt && python app.py"
    volumes:
      - ./:/usr/src/app
    working_dir: /usr/src/app
    
    depends_on:
      - db

  db:
    image: postgres:13
    container_name: postgres_db
    environment:
      - POSTGRES_DB=mydatabase
      - POSTGRES_USER=bienvenu
      - POSTGRES_PASSWORD=0712
    ports:
      - "8023:8023"
    volumes:
      - postgres_data:/var/lib/postgresql/data

volumes:
  postgres_data:





name: Docker Image CI
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build-image1-backend:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Login to Scaleway Container Registry
      uses: docker/login-action@v3
      with:
        username: nologin
        password: ${{ secrets.SCALEWAY_API_KEY }}
        registry: ${{ secrets.CONTAINER_REGISTRY_ENDPOINT }}
    - name: Build the Docker image
      run: docker build .backend/backend -t ${{ secrets.CONTAINER_REGISTRY_ENDPOINT }}/backendtest
    - name: Push the Docker Image
      run: docker push ${{ secrets.CONTAINER_REGISTRY_ENDPOINT }}/groupe-2

  build-image2-frontend:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Login to Scaleway Container Registry
      uses: docker/login-action@v3
      with:
        username: nologin
        password: ${{ secrets.SCALEWAY_API_KEY }}
        registry: ${{ secrets.CONTAINER_REGISTRY_ENDPOINT }}
    - name: Build the Docker image
      run: docker build ./frontend -t ${{ secrets.CONTAINER_REGISTRY_ENDPOINT }}/frontendtest
    - name: Push the Docker Image
      run: docker push ${{ secrets.CONTAINER_REGISTRY_ENDPOINT }}/groupe-2


  deploy:
      runs-on: ubuntu-latest
      needs: [build-image]
      steps:
        - name: Deploy app
          uses: appleboy/ssh-action@master
          with:
            host: ${{ secrets.SCALEWAY_HOST }}
            username: ${{ secrets.SCALEWAY_USER }}
            key: ${{ secrets.SCALEWAY_SSH_KEY }}
            port: 22
            # stop, remove and update step by step
            script: |
              cd ./bienvenu
              docker-compose down  true
              docker rm .  true
              docker pull ${{ secrets.CONTAINER_REGISTRY_ENDPOINT }}/image1
              docker pull ${{ secrets.CONTAINER_REGISTRY_ENDPOINT }}/image2
              docker-compose up -d 







              


